name: wheels

on:
  push:
    branches:
      - main
  pull_request:
    types:  [opened, synchronize, reopened]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.platform_id }} (${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Windows 64-bit (Windows 2019 is needed for Python 3.8)
          - os: windows-2019
            compiler: gcc
            python-version: '3.8'
            platform_id: win_amd64
          - os: windows-latest
            compiler: gcc
            python-version: '3.9'
            platform_id: win_amd64
          - os: windows-latest
            compiler: gcc
            python-version: '3.10'
            platform_id: win_amd64
          - os: windows-latest
            compiler: gcc
            python-version: '3.11'
            platform_id: win_amd64

          # # Linux 64-bit
          # - os: ubuntu-latest
          #   python-version: '3.8'
          #   platform_id: manylinux_x86_64
          #   manylinux_image: manylinux2014
          # - os: ubuntu-latest
          #   python-version: '3.9'
          #   platform_id: manylinux_x86_64
          #   manylinux_image: manylinux2014
          # - os: ubuntu-latest
          #   python-version: '3.10'
          #   platform_id: manylinux_x86_64
          #   manylinux_image: manylinux2014
          # - os: ubuntu-latest
          #   python-version: '3.11'
          #   platform_id: manylinux_x86_64
          #   manylinux_image: manylinux2014
          
          # # Mac OSX (Intel)
          # - os: macos-latest
          #   python-version: '3.8'
          #   platform_id: macosx_x86_64
          # - os: macos-latest
          #   python-version: '3.8'
          #   platform_id: macosx_x86_64
          # - os: macos-latest
          #   python-version: '3.8'
          #   platform_id: macosx_x86_64
          # - os: macos-latest
          #   python-version: '3.8'
          #   platform_id: macosx_x86_64
      
    steps:
      - name: Checkout quotonic
        uses: actions/checkout@v3

      - name: Install MinGW
        if: ${{ matrix.platform_id == 'win_amd64' }}
        uses: egor-tensin/setup-mingw@v2.2.0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]

      - name: Generate wheel file
        run: python -m build

      - name: Store artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheel
          path: ./dist/*.whl

      # - name: Install cibuildwheel
      #   run: python -m pip install cibuildwheel

      # - name: Build and test wheels
      #   env:
      #     CIBW_ENVIRONMENT: OMP_NUM_THREADS=2
      #     CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
      #     CIBW_ARCHS: all
      #     CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux_image }}
      #     CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.manylinux_image }}
      #     #CIBW_REPAIR_WHEEL_COMMAND_LINUX: ''
      #     CIBW_TEST_REQUIRES: pytest
      #     CIBW_TEST_COMMAND: "pytest"
      #     CIBW_BUILD_VERBOSITY: 1
        
      #   run: python -m cibuildwheel --output-dir wheelhouse

      # - name: Store artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     path: ./wheelhouse/*.whl